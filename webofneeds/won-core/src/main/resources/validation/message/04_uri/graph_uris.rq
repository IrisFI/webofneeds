prefix dc:    <http://purl.org/dc/elements/1.1/>
prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
prefix geo:   <http://www.w3.org/2003/01/geo/wgs84_pos#>
prefix conn:  <http://localhost:8080/won/resource/connection/>
prefix event: <http://localhost:8080/won/resource/event/>
prefix woncrypt: <https://w3id.org/won/core#>
prefix xsd:   <http://www.w3.org/2001/XMLSchema#>
prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfg:   <http://www.w3.org/2004/03/trix/rdfg-1/>
prefix local: <http://localhost:8080/won/resource/>
prefix won:   <https://w3id.org/won/core#>
prefix msg:   <https://w3id.org/won/message#>
prefix signature: <http://icp.it-risk.iwvi.uni-koblenz.de/ontologies/signature.owl#>
prefix ldp:   <http://www.w3.org/ns/ldp#>


  SELECT

	?requiredGraphNames
    (if(?requiredAndIllegalGraphs = if (bound(?type) && (?type = msg:AtomHintMessage || ?type = msg:SocketHintMessage ), 1,2) , "OK", "FAIL") AS ?check)

  WHERE 
  {     
   {SELECT ?type
      WHERE
      { 
        optional {
          graph ?g{
            ?g rdfg:subGraphOf ?event.
                 ?event msg:messageType ?type.
               ?event a msg:FromExternal
          }
        }
      }
    }
  
    {
	  SELECT ( COUNT(DISTINCT(?g)) as ?requiredAndIllegalGraphs )
	  WHERE
	  {
        {
          SELECT ?message 
          WHERE
          {
              GRAPH ?envelope 
              {
                  ?envelope rdfg:subGraphOf ?message .
              } 
              FILTER( REGEX( STR( ?envelope ), ".+#envelope$" ) )
          }
      	}
        
	  	GRAPH ?g
	    {
	      ?a ?b ?c .
	    } 
        # idea: select only envelope + signature (required) plus anything that's not a content graph (illegal), then fail if not the required number
        FILTER(
        	STR( ?g ) = CONCAT(STR(?message),"#envelope" ) 
        	|| STR( ?g ) = CONCAT(STR(?message),"#signature" )
            || ! STRSTARTS( STR( ?g ), CONCAT(STR(?message),"#" ))
          )
	  }
	}
  }
  
  
