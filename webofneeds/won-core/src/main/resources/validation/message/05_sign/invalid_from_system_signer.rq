prefix dc:    <http://purl.org/dc/elements/1.1/>
prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
prefix geo:   <http://www.w3.org/2003/01/geo/wgs84_pos#>
prefix conn:  <http://localhost:8080/won/resource/connection/>
prefix event: <http://localhost:8080/won/resource/event/>
prefix woncrypt: <https://w3id.org/won/core#>
prefix xsd:   <http://www.w3.org/2001/XMLSchema#>
prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix local: <http://localhost:8080/won/resource/>
prefix won:   <https://w3id.org/won/core#>
prefix msg:   <https://w3id.org/won/message#>

prefix ldp:   <http://www.w3.org/ns/ldp#>


# 'fromOwner' envelopes should be signed by:
# - if it is the envelope without child envelopes - by sender atom
# - if it is any other envelope - by sender Node, if specified,
# and by receiver Node, if senderNode is unspecified
#ASK
#{
  SELECT

    ?signer
    
    ?signerCount
    ?signedCount
    
    ( if( (?signedCount = 0 || ?signerCount = 1), "OK", "FAIL") AS ?check)


  WHERE
  {


    # count fromOwner leaf that have correct signers
    {SELECT
    (count(DISTINCT ?signer) as ?signerCount )
    (count(DISTINCT ?signedGraph) as ?signedCount )
    WHERE
    {
      GRAPH ?env
      {
          ?env a msg:EnvelopeGraph .
          ?env <http://www.w3.org/2004/03/trix/rdfg-1/subGraphOf> ?event .
          ?event a msg:FromOwner .
          {
          	?event msg:senderSocket  ?senderSocketOrAtom .
          } union {
          	?event msg:senderAtom  ?senderSocketOrAtom .
          }  
          
      } 
      BIND( IRI( replace( ?senderSocketOrAtom, "/atom/[a-zA-Z0-9#]+$", "" ) ) as ?signer )
      GRAPH ?g1
      {
          ?sig a msg:Signature .
          ?sig msg:signedGraph ?signedGraph .
      } 
      GRAPH ?g2
      {
          ?sig a msg:Signature .
          ?sig msg:signedGraph ?signedGraph .
          ?sig msg:signer ?signer .
      }
      FILTER NOT EXISTS {
      	?env msg:content ?g1
      }
      FILTER NOT EXISTS {
      	?env msg:content ?g2
      } 
    } 

  }


}