prefix dc:    <http://purl.org/dc/elements/1.1/>
prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
prefix geo:   <http://www.w3.org/2003/01/geo/wgs84_pos#>
prefix conn:  <http://localhost:8080/won/resource/connection/>
prefix event: <http://localhost:8080/won/resource/event/>
prefix woncrypt: <https://w3id.org/won/core#>
prefix xsd:   <http://www.w3.org/2001/XMLSchema#>
prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix local: <http://localhost:8080/won/resource/>
prefix won:   <https://w3id.org/won/core#>
prefix msg:   <https://w3id.org/won/message#>

prefix ldp:   <http://www.w3.org/ns/ldp#>
prefix rdfg:   <http://www.w3.org/2004/03/trix/rdfg-1/>

# each content graph should be referenced from exactly one envelope graph

#ASK
#{
  SELECT

	?unreferencedGraphs


    (if(?unreferencedGraphs = 0, "OK", "FAIL") AS ?check)

  WHERE
  {

   
    # count number of graphs that are neither envelopes nor signatures and that are not referenced from an envelope graph
    { SELECT (count(distinct ?graphToCheck) as ?unreferencedGraphs)
        WHERE
        {
        	# select all graphs
        	{ SELECT ?graphToCheck 
        		WHERE 
	        	{
			    	GRAPH ?graphToCheck
		    		{
		        		?a ?b ?c
		        	} 
		    	}
        	}
        	# filter out the envelopes
	        FILTER NOT EXISTS 
	        {
	        	GRAPH ?graphToCheck
	            {
	              ?graphToCheck rdf:type msg:EnvelopeGraph
	            } 
			}
            
			# filter out those that are signature graphs
	        FILTER NOT EXISTS 
	        {
	        	GRAPH ?graphToCheck
	            {
	              ?graphToCheck rdf:type msg:Signature .
	              ?graphToCheck msg:signedGraph ?anotherGraph .
	            } 
			}
			
			# filter out those that are referenced with msg:content from an envelopeGraph
	        FILTER NOT EXISTS 
	        {
	        	GRAPH ?env
	            {
	              ?env a msg:EnvelopeGraph .
	              ?env rdfg:subGraphOf/msg:content ?graphToCheck .
	            } 
			}
            
		}
     }




  }
#}