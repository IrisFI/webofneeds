# Query for extracting data based on a SHACL validation resultPath.
# Returns triples that match the shape, extracted SHACL shape elements for extraction are:
# * target nodes
# * rdf:type for target classes
# * direct properties in propoerty paths
# * sequence propoerties in property paths

prefix dash: <http://datashapes.org/dash#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix schema: <http://schema.org/>
prefix sh: <http://www.w3.org/ns/shacl#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix sh-ext: <http://www.example.org/shacl-ext#>
prefix ex: <http://www.example.org/data#>

construct {
 ?s ?p ?o .
} where {
	?s ?p ?o .
    {
      select distinct ?node ?shape
      where {
        {
            ?shape sh:targetNode ?target .
        } union {
            ?shape sh:targetClass ?class .
            ?target a ?class .
        } union {
            ?class a rdfs:class;
                   a sh:NodeShape.
            ?target a ?class .
            bind (?class as ?shape) .
        } union {
            ?shape sh:targetSubjectsOf ?property.
            ?target ?property ?any.
        } union {
            ?shape sh:targetObjectsOf ?property.
            ?any ?property ?target.
        }
        bind (?target as ?node)
      }
   }

   {
     # include properties which where directly referenced by sh:path
     ?shape sh:property ?propShape .
     ?propShape sh:path ?prop .
     bind (?node as ?s)
     bind (?prop as ?p)
     ?s ?p ?o .
   } union {
    #include all properties listed in a sequence path
    ?shape sh:property ?propShape .
    ?propShape sh:path ?pathStart .
    ?pathStart rdf:rest*/rdf:first ?prop .
    ?s ?prop ?o .
    bind (?prop as ?p)
   } union {
     # include rdf:type for all focus nodes that get referenced by sh:targetClass
     ?node rdf:type ?val .
     ?shape sh:targetClass ?val .
     bind (?node as ?s)
     bind (?val as ?o)
     bind (rdf:type as ?p)
   } union {
     ?s rdf:type ?class .
     ?shape sh:property ?propShape .
     ?propShape sh:class ?class .
     ?propShape sh:path ?prop .
     ?node ?prop ?s .
     bind (rdf:type as ?p)
   }
}