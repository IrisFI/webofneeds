PREFIX mod: <http://purl.org/webofneeds/modification#>
PREFIX agr: <http://purl.org/webofneeds/agreement#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX msg: <http://purl.org/webofneeds/message#>
PREFIX won: <http://purl.org/webofneeds/model#>

 SELECT ?acc ?s ?p ?o WHERE {
    GRAPH ?g1 {   
        ?prop agr:proposes ?clause .
    }
    # Note: for this pattern, we need the union of all graphs that contain msg:hasPreviousMessage triples,
    # Jena provides the special graph name <urn:x-arq:UnionGraph> for querying the union of all the query's graphs
    # THIS QUERY WILL ONLY WORK WITH JENA
    GRAPH <urn:x-arq:UnionGraph> {
        ?prop msg:hasPreviousMessage+/msg:hasCorrespondingRemoteMessage? ?clause .
        ?acc msg:hasPreviousMessage+/msg:hasCorrespondingRemoteMessage ?prop .
    }
    GRAPH ?g2 {
        ?acc agr:accepts ?prop .
    }
    GRAPH ?g3 {
        ?clause msg:hasContent ?clauseContent .
    }
    GRAPH ?clauseContent {
      ?s ?p ?o .
    }
    filter not exists {
      
      GRAPH ?gc1 {   
          ?cancelProp agr:proposesToCancel ?acc .
      }
      # Note: for this pattern, we need the union of all graphs that contain msg:hasPreviousMessage triples,
      # Jena provides the special graph name <urn:x-arq:UnionGraph> for querying the union of all the query's graphs
      # THIS QUERY WILL ONLY WORK WITH JENA
      GRAPH <urn:x-arq:UnionGraph> {      
          ?cancelProp msg:hasPreviousMessage+/msg:hasCorrespondingRemoteMessage? ?acc .
          ?cancelAcc msg:hasPreviousMessage+/msg:hasCorrespondingRemoteMessage ?cancelProp .
      }
      GRAPH ?gc2 {
          ?cancelAcc agr:accepts ?cancelProp .
      }  
      GRAPH ?gc3 {
          ?cancelProp msg:hasContent ?gc1.  
      }
      GRAPH ?gc4 {
          ?cancelAcc msg:hasContent ?gc2.  
      }
                  
    }
    


}
order by ?acc