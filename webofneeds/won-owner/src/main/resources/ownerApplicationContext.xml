<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
                http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
                http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!--
         Load properties but ignore unresolvable properties so that
         they are searched in other property configuerers defined in the context
    -->
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/owner.properties" ignore-unresolvable="true"/>

    <!-- messaging beans -->
    <camel:camelContext id="wonOwnerCamel">
        <camel:packageScan>
            <camel:package>won.owner.camel.routes.fixed</camel:package>
        </camel:packageScan>
        <camel:template id="producerTemplate" defaultEndpoint="direct:OUTMSG1"/>
        <camel:endpoint id="outgoingMessages" uri="seda:OUTMSG"/>
        <camel:endpoint id="needMessageQueue" uri="activemq:WON.MSG" pattern="InOut"></camel:endpoint>
    </camel:camelContext>

    <!--bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
          <property name="configuration" ref="jmsConfig"></property>

    </bean-->

    <bean id = "jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="cachedConnectionFactory"/>
        <property name="concurrentConsumers" value="10"/>
    </bean>

    <bean id="activemqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" >
        <!--property name="brokerURL" value="tcp://localhost:61616"/-->
        <!--property name="brokerURL" value="amqp://localhost:5672"/-->
    </bean>
    <!--bean id="pooledConnectionFactory"
          class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
       <property name="createConnectionOnStartup" value="true" />
        <property name="connectionFactory" ref="activemqConnectionFactory" />
    </bean-->

    <bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory" >
        <property name="targetConnectionFactory" ref="activemqConnectionFactory"></property>

        <property name="sessionCacheSize" value="10"></property>

    </bean>

    <!-- Camels AMQP component doesn't seem to support AMQP 1.0 yet -->
    <!--bean id ="amqpComponent" class="org.apache.camel.component.amqp.AMQPComponent">
        <property name="configuration" ref="jmsConfig"></property>
    </bean-->
    <!--bean id="amqpConnectionFactory" class="org.apache.qpid.client.AMQConnectionFactory">
    <property name="brokerURL" value="tcp://localhost:61616"/>
    <constructor-arg index="0" type="java.lang.String" value="amqp://localhost:5672"/>
    </bean-->

    <!--bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="WON.MSG"></constructor-arg>
    </bean>
    <bean id="producerJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachedConnectionFactory"></property>
        <property name="defaultDestination" ref="destination"></property>
    </bean-->

    <!-- bean for consuming messages -->

    <!--jms:listener-container container-type="default" connection-factory="cachedConnectionFactory" acknowledge="auto">
        <jms:listener destination="WON.CREATENEED" ref="ownerProtocolOwnerServiceImpl" method="onMessage"></jms:listener>
    </jms:listener-container-->
    <!--bean id="needMessageCreator" class="won.owner.protocol.impl.NeedMessageCreatorImpl"></bean-->
    <!-- Activate Annotation based configuration -->
    <context:annotation-config />

    <!-- Defines where to search for annotated components -->
    <context:component-scan base-package="won.protocol.exception" />
    <context:component-scan base-package="won.protocol.matcher" />
    <context:component-scan base-package="won.protocol.model" />
    <context:component-scan base-package="won.protocol.need" />
    <context:component-scan base-package="won.protocol.owner" />
    <context:component-scan base-package="won.protocol.repository" />
    <context:component-scan base-package="won.protocol.service" />
    <context:component-scan base-package="won.protocol.util" />


    <!-- Database connection -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.sql.jdbcDriverClass}" />
        <property name="jdbcUrl" value="${db.sql.jdbcUrl}"/>
        <property name="user" value="${db.sql.user}" />
        <property name="password" value="${db.sql.password}" />
    </bean>


    <!-- Hibernate is used as JPA vendor-->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="generateDdl" value="true" /> <!-- Automatically create tables for the entity classes. Don't do this in production! -->
        <property name="showSql" value="false" /> <!-- Set this to true for analyzing SQL queries -->
    </bean>

    <!-- Entity manager -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="won.protocol.model" />
    </bean>

    <!-- Configure transaction management -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Defines where repositories are placed -->
    <jpa:repositories base-package="won.protocol.repository" />


</beans>