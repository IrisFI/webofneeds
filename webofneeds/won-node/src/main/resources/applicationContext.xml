<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:activemq="http://activemq.apache.org/schema/core"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
                http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
                http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
                http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/needserver.properties</value>
                <value>classpath:/override/needserver.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <context:property-placeholder location="classpath:activemq.properties" />

    <!-- Activate Annotation based configuration -->
    <context:annotation-config />

    <!-- Defines where to search for annotated components -->
    <context:component-scan base-package="won.protocol" />

    <bean id="messageProducer" class="won.node.protocol.impl.MessageProducer"></bean>

    <!-- Camel configuration -->
    <camel:camelContext>
        <camel:packageScan>
            <camel:package>won.node.routes.fixed</camel:package>
        </camel:packageScan>
        <camel:template id="producerTemplate" defaultEndpoint="direct:JMS"/>
        <camel:endpoint id="outgoingMessages" uri="seda:OUTMSG" />
    </camel:camelContext>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
         <property name="brokerURL" value="vm://localhost:61616"/>
    </bean>

    <!-- Configuring Broker -->
    <bean id="embeddedBroker1" class="org.apache.activemq.xbean.PooledBrokerFactoryBean">
        <property name="config" value="classpath:activemq.xml"/>
        <property name="start" value="true"/>
    </bean>

    <bean id="activemqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" depends-on="embeddedBroker1">
        <property name="brokerURL" value="vm://localhost:5672"/>
    </bean>

    <bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="activemqConnectionFactory"></property>
        <property name="sessionCacheSize" value="10"></property>
    </bean>

    <!-- Database connection -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.sql.jdbcDriverClass}" />
        <property name="jdbcUrl" value="${db.sql.jdbcUrl}"/>
        <property name="user" value="${db.sql.user}" />
        <property name="password" value="${db.sql.password}" />
    </bean>

    <!-- Hibernate is used as JPA vendor-->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="generateDdl" value="true" /> <!-- Automatically create tables for the entity classes. Don't do this in production! -->
        <property name="showSql" value="false" /> <!-- Set this to true for analyzing SQL queries -->
    </bean>

    <!-- Entity manager -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="won.protocol.model" />
    </bean>

    <!-- Configure transaction management -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Defines where repositories are placed -->
    <jpa:repositories base-package="won.protocol.repository" />


</beans>