<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
                http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
                http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <context:property-placeholder location="file:${WON_CONFIG_DIR}/node.properties" ignore-unresolvable="true"/>
    <!-- Defines where to search for annotated components -->
    <context:component-scan base-package="won.protocol.exception" />
    <context:component-scan base-package="won.protocol.matcher" />
    <context:component-scan base-package="won.protocol.model" />
    <context:component-scan base-package="won.protocol.need" />
    <context:component-scan base-package="won.protocol.owner" />
    <context:component-scan base-package="won.protocol.repository" />
    <context:component-scan base-package="won.protocol.service" />
    <context:component-scan base-package="won.protocol.util" />



    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <!-- note: this URI does not need to be configurable via the
        config file, it will be the same on any system -->
        <!--property name="brokerURL" value="${uri.protocol.activemq}?useLocalHost=false"/-->
        <!--property name="connectionFactory" ref="cachedConnectionFactory"/-->
    </bean>
    <!-- Configuring Broker -->
    <bean id="embeddedBroker1" class="org.apache.activemq.xbean.PooledBrokerFactoryBean">
        <property name="config" value="classpath:activemq.xml"/>
        <property name="start" value="true"/>

    </bean>

    <bean id="activemqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" depends-on="embeddedBroker1">
        <!-- note: this URI does not need to be configurable via the
        config file, it will be the same on any system -->
        <property name="brokerURL" value="${uri.protocol.activemq}?useLocalHost=false"/>
    </bean>
    <bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="activemqConnectionFactory"></property>
        <property name="sessionCacheSize" value="10"></property>
    </bean>


    <bean id="needProtocolActiveMQService" class="won.node.messaging.NeedProtocolActiveMQServiceImpl">
        <property name="componentName" value="activemq"/>
        <property name="activeMQService" ref="activeMQService"/>
    </bean>
    <bean id="activeMQService" class="won.protocol.jms.ActiveMQServiceImpl">
        <constructor-arg name="type" value="NeedProtocol"/>
    </bean>
</beans>