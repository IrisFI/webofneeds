<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <import resource="classpath:/spring/owner-jmsonly.xml"/>

    <!-- monitoring -->
    <!--
    <import resource="classpath:/spring/component/monitoring/bot-monitoring-jmx.xml" />
    <import resource="classpath:/spring/component/monitoring/bot-monitoring.xml" />
    -->

    <!-- this introduces the email-based subsystem for generating atoms to be loaded, which is not desirable for most
     applications. -->
    <!-- import resource="classpath:/spring/component/atomproducer/atomproducer-mixed.xml" /-->

    <import resource="classpath:/spring/component/monitoring/monitoring-recorder.xml"/>
    <import resource="classpath:/spring/component/matcherProtocolAtomServiceClient/matcherProtocolAtomServiceClient-jms.xml"/>
    <import resource="classpath:/spring/component/MatcherProtocolMatcherService/matcherProtocolMatcherService-jms.xml"/>
    <import resource="classpath:/spring/component/camel/matcher-camel.xml"/>
    <import resource="classpath:/spring/core/matcher-core.xml"/>
    <import resource="classpath:/spring/component/storage/storage.xml"/>
    <import resource="classpath:/spring/component/services/matcher-services.xml"/>
    <import resource="classpath:/spring/component/linkeddatasource/matcher-linkeddatasource.xml"/>
    <import resource="classpath:/spring/component/ehcache/spring-matcher-ehcache.xml"/>
    <import resource="classpath:/spring/component/nodeurisource/matcher-nodeurisource-all.xml"/>

    <bean id="taskScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
          destroy-method="destroy">
        <property name="poolSize" value="15"/>
    </bean>

    <!-- expects a botManager and a taskScheduler bean -->
    <bean id="botOwnerProtocolAdapter" class="won.bot.integration.BotOwnerCallback">
        <property name="botManager" ref="botManager"/>
        <property name="taskScheduler" ref="taskScheduler"/>
    </bean>

    <!-- provides the bean expected by the dynamic camel route configuration in won-owner -->
    <bean id="mainOwnerMessageProcessor" class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg>
            <!-- adapts an OwnerCallback to incoming messages. The callback is autowired -->
            <bean class="won.owner.protocol.message.base.MessageExtractingOwnerCallbackAdapter"/>
        </constructor-arg>
    </bean>

    <bean id="botManager" class="won.bot.framework.manager.impl.SpringAwareBotManagerImpl">
        <property name="checkWorkDoneTrigger">
            <bean class="org.springframework.scheduling.support.PeriodicTrigger">
                <constructor-arg name="period" value="10"/>
                <constructor-arg name="timeUnit" value="SECONDS"/>
                <property name="fixedRate" value="true"/>
                <property name="initialDelay" value="10"/>
            </bean>
        </property>
    </bean>

    <!-- expects a botManager and a taskScheduler bean -->
    <bean id="matcherProtocolMatcherServiceHandler"
          class="won.bot.integration.BotMatcherProtocolMatcherServiceCallback">
        <property name="botManager" ref="botManager"/>
        <property name="taskScheduler" ref="taskScheduler"/>
    </bean>


    <!-- ####################### Node Uri Source Beans ####################################### -->
    <!--
        Only use one of the beans defined in here, otherwise nodeUriSourceRoundRobin will be chosen anyway
        Due to the default-qualifier
     -->
    <bean id="nodeUriSourceRoundRobin"
          class="won.bot.framework.component.nodeurisource.impl.RoundRobinMultiNodeUriSource">
        <property name="nodeURIs" value="#{'${won.node.uris}'.split(' ')}"/>
        <qualifier value="default"/>
    </bean>

    <!-- bean id="nodeUriSourceRandom" class="won.bot.framework.component.nodeurisource.impl.RandomMultiNodeUriSource">
        <property name="nodeURIs" value="#{'${won.node.uris}'.split(' ')}"/>
    </bean -->
    <!-- ##################################################################################### -->

    <!-- Import the correct botContext so we do not create all possible botContexts (currently possible: memoryBotContext and mongoBotContext)-->
    <import resource="classpath:/spring/component/botContext/${botContext.impl}.xml" />
</beans>
