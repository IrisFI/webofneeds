<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>webofneeds</artifactId>
        <groupId>webofneeds</groupId>
        <version>0.1-SNAPSHOT</version>
    </parent>
    <packaging>war</packaging>
    <name>Owner Webapp</name>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>won-owner-webapp</artifactId>

    <repositories>
        <!--<repository>
            <id>spring-snapshot</id>
            <url>https://repo.spring.io/libs-milestone</url>
        </repository>-->
        <repository>
            <id>spring-snapshot</id>
            <url>https://repo.spring.io/libs-snapshot</url>
        </repository>
    </repositories>


	<dependencies>
        <!--

                 Warning! Only to be used in connection with the
                 <dependencyManagement> section in the parent pom!

        -->
        <dependency>
            <groupId>webofneeds</groupId>
            <artifactId>won-owner</artifactId>
            <version>${project.version}</version>
            <scope>${dependencies.scope}</scope>
        </dependency>
        <dependency>
            <groupId>webofneeds</groupId>
            <artifactId>won-matcher</artifactId>
            <version>${project.version}</version>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <!-- JSTL/Servlet-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <!-- JAX-WS (webservices)-->
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-tools</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

	    <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

	    <dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
            <scope>${dependencies.scope}</scope>
	    </dependency>
	    <dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
            <scope>${dependencies.scope}</scope>
	    </dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
            <scope>${dependencies.scope}</scope>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>
        <!-- Hibernate Validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
            <scope>${dependencies.scope}</scope>
		</dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>



        <dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
            <scope>${dependencies.scope}</scope>
		</dependency>

		<dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
            <scope>${dependencies.scope}</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
            <scope>${dependencies.scope}</scope>
		</dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <!-- spring-session -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session</artifactId>
            <version>1.0.0.RC1</version>
            <!--version>1.0.0.BUILD-SNAPSHOT</version-->
        </dependency>

    </dependencies>


    <build>
        <finalName>owner</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>${cargo.version}</version>
                <configuration>
                    <container>
                        <containerId>tomcat7x</containerId>
                        <type>remote</type>
                    </container>
                    <configuration>
                        <type>runtime</type>
                        <properties>
                            <cargo.remote.uri>${tomcat.url}</cargo.remote.uri>
                            <cargo.remote.username>${tomcat.user}</cargo.remote.username>
                            <cargo.remote.password>${tomcat.password}</cargo.remote.password>
                        </properties>
                    </configuration>
                    <deployer>
                        <type>remote</type>
                    </deployer>
                    <deployables>
                        <deployable>
                            <groupId>webofneeds</groupId>
                            <artifactId>won-owner-webapp</artifactId>
                            <type>war</type>
                        </deployable>
                    </deployables>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy-owner-tomcat</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deployer-redeploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies-to-owner-webapp</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>