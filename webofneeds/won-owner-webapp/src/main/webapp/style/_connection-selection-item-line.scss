@import "won-config";
@import "sizing-utils";
@import "fonts";
@import "flex-layout";
@import "square-image";
@import "speech-bubble";

won-connection-selection-item {
  $triangleCutoutSize: $speechBubbleTailSize;
  $padding: 0.5rem;
  display: grid;
  grid-template-columns: 1fr min-content;
  grid-auto-flow: column;
  position: relative; // to allow positioning the contextmenu in relation to this component-root
  padding-left: $padding + $triangleCutoutSize;
  padding-right: $padding;
  padding-top: $padding;
  padding-bottom: $padding;

  background-color: $won-light-gray;

  &:not(.won-unread) {
    @include speech-bubble-left-inward(
      $won-line-gray,
      $won-line-gray,
      $triangleCutoutSize,
      $thinBorderWidth,
      50%,
      "before" /* needed so there can be another tail*/
    );
    border-left: $thinGrayBorder;
  }
  &.won-unread {
    @include speech-bubble-left-inward(
      $won-primary-color,
      $won-primary-color,
      $triangleCutoutSize,
      $thinBorderWidth,
      50%,
      "before" /* needed so there can be another tail*/
    );
    border-left: $thinBorderWidth solid $won-primary-color;
  }

  $invisibleBorder: $thinBorderWidth solid $won-light-gray;
  border-bottom: $thinGrayBorder;

  &:hover,
  &.selected {
    background-color: white;
  }
  &.selected {
    @include speech-bubble-right(
      white,
      $won-line-gray,
      $speechBubbleTailSize,
      $thinBorderWidth,
      50%
    );
    position: sticky;
    top: calc(var(--headerHeight) + var(--won-overview-open-need-height));
    z-index: 500;
  }
  & .csi__closebutton.won-button--outlined.red.thin {
    font-size: $smallFontSize;
    padding: 0.5rem;
    margin-left: 0.25rem;
  }
}
