@import "won-config";
@import "text";
@import "descriptionpicker";
@import "locationpicker";
@import "tagspicker";
@import "ttlpicker";
@import "animate";
@import "sizing-utils";
@import "textfield";

won-create-isseeks {
  display: flex;
  flex-direction: column;

  // title
  .cis__mandatory {
    display: grid;
  }

  // details picker
  .cis__addDetail {
    //border-top: $thinBorderWidth solid $won-line-gray;
    padding: 0 0 0 0;
    @include appearAnimation(0.5s, linear);

    .cis__detail__items {
      @include slideWithOpacityAnimation(0.5s, linear, 20rem, 0.5rem 0);
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      padding: 0.5rem 0;

      .cis__detail__items__item {
        display: flex;
        align-items: center;
        min-width: 0.5rem;
        margin: 0.3rem;
        font-size: $normalFontSize;
        //padding: .5rem 0;
        cursor: pointer;

        color: black;
        --local-primary: black; // for the svg-icons

        &.picked,
        &.picked .cis__circleicon {
          //color: $won-line-gray;
          //--local-primary: $won-line-gray; // for the svg-icons
          color: $won-primary-color;
          --local-primary: #{$won-primary-color};
          cursor: default;
        }
      }
    }
  }

  // details components
  .cis__details {
    //@include slideWithOpacityAnimation(.5s, linear, 60rem, 0.5rem, 0.75rem);
    @include slideWithOpacityAnimation(0.5s, linear, 20rem);

    border-top: $thinBorderWidth solid $won-line-gray;
    padding: 0.5rem 0;

    color: black;
    --local-primary: black; // for the svg-icons
  }

  .cis__circleicon {
    @include fixed-height(2rem);
    @include fixed-width(2.5rem);
  }

  .cis__addDetail__header {
    display: flex;
    font-size: $mediumFontSize;
    font-weight: 400;
    &.tags {
      padding-bottom: 1rem;
    } // ttl and description uses grid and grid-gap
    &.location {
      padding-bottom: 1rem;
    } // ttl and description uses grid and grid-gap

    span {
      padding-left: 0.5rem;
    }

    svg.hover,
    span.hover {
      display: none;
    }

    svg.nonHover,
    span.nonHover {
      display: inline;
    }

    &:hover {
      cursor: pointer;

      svg.hover,
      span.hover {
        display: inline;
      }

      span.nonHover,
      svg.nonHover {
        display: none;
      }
    }

    &.tags {
      font-size: $normalFontSize + 0.25rem;
    }

    &.detailPicker {
      font-size: $normalFontSize + 0.25rem;
      padding: 0.5rem 0;
      color: $won-primary-color;
      --local-primary: $won-primary-color; // for the svg-icons

      &:hover {
        color: black;
        --local-primary: black; // for the svg-icons
      }
    }

    .cis__addDetail__header__carret {
      @include fixed-square(1rem);

      // visually center icon on line
      position: relative;
      top: 0.1em;
    }
  }

  //Currently not displayed style might be incorrect
  won-image-dropzone {
    $borderSize: 5.66rem;
    $padding: 1rem;
    @include fixed-square($borderSize);
    display: block;

    %wid__dropzone {
      box-sizing: border-box;
      height: 100%;
      width: 100%;

      position: relative; //to allow children to use pos:absolute

      overflow: hidden; // to crop the `fill`ing image
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      /* the preview is set via js:
       * background-image: url({{self.imageDataUrl}});
       */

      input {
        filter: alpha(opacity=0);
        opacity: 0;
        height: 100%;
        width: 100%;
        position: absolute;
      }

      & .wid__dropzone__default-bg,
      & .wid__dropzone__preview-img {
        @extend %center--absolute;
        pointer-events: none;
      }
    }

    .wid__dropzone--empty {
      @extend %wid__dropzone;

      border: $boldBorderWidth dashed $won-line-gray;
      border-radius: $boldBorderWidth;

      background-color: white;

      .wid__dropzone__default-bg {
        @include max-square($borderSize - 2 * $padding - 2 * $boldBorderWidth);
      }
    }

    .wid__dropzone--filled {
      @extend %wid__dropzone;

      border: $thinBorderWidth solid $won-line-gray;

      .wid__dropzone__default-bg {
        display: none;
      }
    }
  }
}
