/**
 * abstract flex-direction
 */
%flex {
  /* flex */
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;
  align-content: center;
  align-items: center;

  & > * {
    /* flex-child */
    order: 1;
    flex-grow: 0;
    flex-shrink: 1;
    flex-basis: auto;
    align-self: auto;

    //display: block; //TODO seems to work without display:block. keep an eye on this.
  }
  //the rule below fixes the most common case of wrapped flex-containers
  /*
  TODO this rule generates a quadratically growing number of selectors :|
  and might warrant making %flex a mixin instead (especially if the default values get dropped,
  as most of these are browser defaults anyway.)
  TODO seems to work without display:block anyway. keep an eye on this.
  */
  /*
  & > %flex {
    display: flex;
  }
  */
}

%flex-row {
  /* flex-row */
  @extend %flex;
  flex-direction: row;
}
%flex-column {
  /* flex-column */
  @extend %flex;
  flex-direction: column;
}

%flex-bottom-center {
  @extend %flex-column;
  justify-content: flex-end;
}

%flex-row-spaced {
  @extend %flex-row;
  justify-content: space-between;
}
%flex-column-spaced {
  @extend %flex-column;
  justify-content: space-between;
}

@mixin flex {
  display: flex;
  justify-content: center;
  align-content: center;
  align-items: center;
}
@mixin flex-row {
  @include flex;
  flex-direction: row;
}
@mixin flex-column {
  @include flex;
  flex-direction: column;
}
@mixin flex-bottom-center {
  @include flex-column;
  justify-content: flex-end;
}
@mixin flex-row-spaced {
  @include flex-row;
  justify-content: space-between;
}
@mixin flex-column-spaced {
  @include flex-column;
  justify-content: space-between;
}
